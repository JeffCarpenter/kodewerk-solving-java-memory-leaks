#SAMPLE PROPERTIES FILE FOR THE TRANSACTION SERVICE
#THIS FILE ILLUSTRATES THE DIFFERENT SETTINGS FOR THE TRANSACTION MANAGER
#UNCOMMENT THE ASSIGNMENTS TO OVERRIDE DEFAULT VALUES;

#different implementations of our JTA exists; 
#this property indicates which one you use.
#NOTE: there is no default for this, so it MUST be specified! 
#value below is for TransactionsJTA
#
com.atomikos.icatch.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory
#
#Use the service below for TransactionsRMI
#
#com.atomikos.icatch.service=com.atomikos.icatch.trmi.UserTransactionServiceFactory
	    
#Set base name of file where messages are output 
#(also known as the 'console file').
#
#com.atomikos.icatch.console_file_name = tm.out

#Size limit (in bytes) for the console file;
#negative means unlimited.
#
#com.atomikos.icatch.console_file_limit=-1

#For size-limited console files, this option
#specifies a number of rotating files to 
#maintain.
#
#com.atomikos.icatch.console_file_count=1

#Set the number of log writes between checkpoints
#
#com.atomikos.icatch.checkpoint_interval=500

#Set output directory where console file and other files are to be put
#make sure this directory exists!
#
com.atomikos.icatch.output_dir = /tmp

#Set directory of log files; make sure this directory exists!
#
com.atomikos.icatch.log_base_dir = /tmp

#Set base name of log file
#this name will be  used as the first part of 
#the system-generated log file name
#
#com.atomikos.icatch.log_base_name = tmlog

#Set the max number of active local transactions 
#or -1 for unlimited. Note: this may be overridden
#by your license!
#
#com.atomikos.icatch.max_actives = 50

#Set the max timeout (in milliseconds) for local transactions
#
#com.atomikos.icatch.max_timeout = 60000

#The globally unique name of this transaction manager process
#override this value with a globally unique name
#
#com.atomikos.icatch.tm_unique_name = tm
	
#Do we want to use parallel subtransactions? JTA's default
#is NO for J2EE compatibility
#
#com.atomikos.icatch.serial_jta_transactions=true
                    
#If you want to do explicit resource registration then
#you need to set this value to false.
#
#com.atomikos.icatch.automatic_resource_registration=true  
	
#Set this to WARN, INFO or DEBUG to control the granularity
#of output to the console file.
#
#com.atomikos.icatch.console_log_level=WARN
	
#Do you want transaction logging to be enabled or not?
#If set to false, then no logging overhead will be done
#at the risk of losing data after restart or crash.
#Note: this setting may be overridden depending on your license!
#
#com.atomikos.icatch.enable_logging=true

#The last part of this file contains specific TransactionsRMI settings
#used for the binding of transaction stubs and the lookup of the
#transaction service across a network. Uncomment to take effect.
#Important: you need to choose between JRMP and IIOP settings.

#TransactionsRMI with RMI-JRMP (native RMI) settings.
#NOTE: you need to start the RMI registry first, with transactions_X_YZ.jar
#in the classpath, or it will not work. Example:type 'rmiregistry' in a
#command shell. Don't forget to have transactions_X_YZ.jar in the classpath!
#Uncomment the following 3 lines to make the settings effective.
#Also, replace localhost with the real IP address of your server.
#
#com.atomikos.icatch.rmi_export_class=UnicastRemoteObject
#java.naming.factory.initial=com.sun.jndi.rmi.registry.RegistryContextFactory
#java.naming.provider.url=rmi://localhost:1099

#TransactionsRMI with RMI-IIOP (CORBA) settings.
#Don't use this if you already uncommented the RMI-JRMP settings above!
#NOTE: you need to start the COSNaming service first, with transactions_X_YZ.jar
#in the classpath, or it will not work. Example: type 'tnameserv -ORBInitialPort 1050'
#in a command shell. Don't forget to have transactions_X_YZ.jar in the classpath!
#Uncomment the following 3 lines to make the settings effective.
#Also, replace localhost with the real IP address of your server.
#
#com.atomikos.icatch.rmi_export_class=PortableRemoteObject
#java.naming.factory.initial=com.sun.jndi.cosnaming.CNCtxFactory 
#java.naming.provider.url=iiop://localhost:1050

#For TransactionsRMI: do we trust a client's transaction manager
#when it tells us to forget heuristic problem transactions?
#Setting this to true enables more automated administration,
#but implies more trust in the client system.
#
#com.atomikos.icatch.trust_client_tm=false

#Do we want the UserTransaction to be available remotely
#in other VMs? Default is not. If you set this to 
#true then you must also set the JNDI initial 
#context factory and provider URL, and start the naming
#service first. These are used
#by the UserTransaction internally, to contact the
#transaction service. You are still required to
#make the UserTransaction available by binding
#it in a JNDI environment of your own.
#
#com.atomikos.icatch.client_demarcation=false
